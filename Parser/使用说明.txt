======================== IPTV频道批量处理工具 ========================

🎯 工具功能：
  从 https://tonkiang.us/ 搜索并提取直播频道播放链接
  自动验证链接有效性，输出标准M3U8格式结果
  采用模块化架构，支持多站点扩展

📁 文件说明：
  LiveChannel.txt          - 输入频道列表文件 (您提供的72个频道)
  result.txt              - 输出结果文件
  modular_batch_processor.py - 主程序文件
  searcher_interface.py    - 通用搜索器抽象基类
  tonkiang_searcher.py     - Tonkiang.us搜索器实现
  示例_新搜索器.py         - 新搜索器开发模板和指导
  
🚀 快速开始：
  双击 一键执行.bat 即可运行

📋 输入文件格式 (LiveChannel.txt)：
  #央视频道
  CCTV1
  CCTV2
  CCTV3
  
  #卫视频道  
  湖南卫视
  浙江卫视

📄 输出文件格式 (result.txt)：
  央视频道,#genre#
  CCTV1,http://example.com/cctv1.m3u8
  CCTV2,http://example.com/cctv2.m3u8

🔧 模块化版本特性：
  ✅ 抽象搜索器接口 - 统一的搜索器规范
  ✅ 搜索器工厂模式 - 动态创建和切换搜索器
  ✅ 可配置参数系统 - 灵活的搜索和验证配置
  ✅ 多站点支持框架 - 轻松扩展新的IPTV站点
  ✅ 示例搜索器模板 - 详细的开发指导
  ✅ 插件式架构设计 - 便于维护和升级
  ✅ 4倍并发处理 - 高效的搜索性能
  ✅ 智能缓存机制 - 避免重复搜索
  ✅ 连接池优化 - 稳定的网络连接
  ✨ 域名频率智能排序 - 高频域名/IP的链接优先显示
  ⚡ 并发链接验证 - 避免串行验证导致的卡死问题

⚙️ 可配置参数：
  • max_results_per_channel: 每个频道最大链接数 (默认10)
  • search_timeout: 搜索超时时间 (默认15秒)
  • min_resolution: 最小分辨率要求 (0=不限制, 720=720p+, 1080=1080p+)
  • enable_validation: 是否启用链接验证 (默认True)
  • enable_cache: 是否启用搜索缓存 (默认True)
  • concurrent_groups: 并发处理的分组数 (默认2)
  • max_workers_per_group: 每个分组的最大并发数 (默认4)

📚 扩展新搜索器：
  1. 查看 示例_新搜索器.py 了解详细实现方法
  2. 继承 BaseIPTVSearcher 类实现搜索逻辑:
     - _setup_session(): 配置HTTP会话
     - _send_search_request(): 发送搜索请求
     - _parse_search_results(): 解析搜索结果
     - _validate_link(): 验证链接有效性
  3. 使用 SearcherFactory.register_searcher() 注册
  4. 在 ProcessorConfig 中指定搜索器名称
  5. 支持热切换搜索器，无需重启程序

💡 切换搜索器示例：
  ```python
  # 在 模块化批量处理器.py 的 main() 函数中修改：
  config = ProcessorConfig(
      searcher_name="tonkiang",      # 默认使用tonkiang
      # searcher_name="newsite",     # 切换到新站点
      max_results_per_channel=10,
      min_resolution=0,              # 可调整分辨率要求
      enable_validation=True         # 可关闭验证提升速度
  )
  ```

🔧 系统要求：
  - Windows 10/11
  - Python 3.12+
  - 网络连接 (访问 tonkiang.us)

⚠️  注意事项：
  1. 首次运行会自动安装依赖包
  2. 确保网络能访问 tonkiang.us 网站
  3. 生成的链接可能会随时间失效，建议定期更新
  4. 模块化架构便于添加新站点和功能扩展

✨ 域名频率智能排序说明：
  • 工作原理: 统计所有链接中域名/IP的出现频率
  • 排序策略: 频率高的域名/IP对应的链接优先显示
  • 优势说明: 
    - 高频域名通常表示更稳定、更可靠的源
    - 相同域名的链接质量往往比较一致  
    - 用户可优先测试使用频率高的源
  • 统计信息: 处理过程中会显示Top10域名/IP频率统计

⚡ 智能链接验证说明：
  • 工作原理: 使用多线程并发验证链接有效性，达到目标数量后自动停止
  • 验证策略: 每个频道只需找到5个有效链接即视为完成，大幅提升速度
  • 并发数量: 最多8个线程同时验证不同链接
  • 超时控制: 单个链接验证3秒超时，总体验证30秒超时
  • 进度显示: 每验证3个链接显示一次进度，实时显示有效链接数量
  • 提前终止: 找到5个有效链接后立即停止，取消剩余验证任务
  • 错误处理: 自动跳过无效链接，确保程序不会卡死

📊 性能预期：
  • 预计用时: 1-2分钟 (72个频道，比之前更快)
  • 并发处理: 2个分组 × 4个并发 = 最多8个频道同时搜索
  • 验证效率: 每个频道找到5个有效链接后立即停止，大幅节省时间
  • 有效链接: 每个频道保证至少5个有效播放链接
  • 支持缓存: 相同频道不会重复搜索
  • 智能排序: 自动按域名频率排序，无需手动调整

🎉 开始使用：
  双击 一键执行.bat 文件即可一键执行，无需手动操作！

==================================================================