name: 自动更新IPTV频道列表

on:
  schedule:
    - cron: '0 22 * * *'  # 每天22:00 UTC执行
    - cron: '0 8 * * *'   # 每天08:00 UTC执行
  workflow_dispatch:      # 允许手动触发

jobs:
  update-channels:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # 允许推送到仓库
      actions: read      # 允许读取actions
    defaults:
      run:
        working-directory: ./Parser
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    

    
    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: 安装依赖包
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install requests beautifulsoup4 lxml
        fi
    
    - name: 显示环境信息
      run: |
        python --version
        ls -la
    
    - name: 检查必要文件
      run: |
        for file in LiveChannel.txt modular_batch_processor.py searcher_interface.py tonkiang_searcher.py run_processor.py; do
          [ -f "$file" ] || exit 1
        done
    
    - name: 备份原始文件
      run: |
        [ -f result.txt ] && cp result.txt result_backup.txt || true
    
    - name: 执行频道搜索
      run: |
        export SEARCH_DELAY=5
        export MAX_WORKERS=1
        export RETRY_DELAY=20
        timeout 1800 python run_processor.py
    
    - name: 检查结果文件并验证质量
      id: check_result
      run: |
        [ -f result.txt ] && [ -s result.txt ] || exit 1
        
        # 修复数字格式问题，确保输出是纯数字
        valid_channel_count=$(grep -v "^[^,]*,$" result.txt 2>/dev/null | wc -l | tr -d ' \n' || echo "0")
        group_count=$(grep -c "^[^,]*,$" result.txt 2>/dev/null | tr -d ' \n' || echo "0")
        
        # 确保变量是有效的数字
        valid_channel_count=${valid_channel_count:-0}
        group_count=${group_count:-0}
        
        # 调试输出
        echo "检测到的频道数: '$valid_channel_count'"
        echo "检测到的分组数: '$group_count'"
        
        # 数字验证：检查是否为纯数字
        if ! [[ "$valid_channel_count" =~ ^[0-9]+$ ]]; then
          echo "错误：频道计数不是有效数字: $valid_channel_count"
          valid_channel_count=0
        fi
        
        if ! [[ "$group_count" =~ ^[0-9]+$ ]]; then
          echo "错误：分组计数不是有效数字: $group_count"
          group_count=0
        fi
        
        # 质量检查
        if [ "$valid_channel_count" -lt 10 ]; then
          echo "检查失败: 频道数=$valid_channel_count (需要≥10)"
          echo "QUALITY_CHECK=false" >> $GITHUB_ENV
          exit 0
        fi
        
        echo "检查通过: 频道数=$valid_channel_count, 分组数=$group_count"
        echo "QUALITY_CHECK=true" >> $GITHUB_ENV
        echo "VALID_CHANNELS=$valid_channel_count" >> $GITHUB_ENV
        echo "GROUPS=$group_count" >> $GITHUB_ENV
    
    - name: 检查文件变化
      id: check_changes
      if: env.QUALITY_CHECK == 'true'
      run: |
        if [ ! -f result_backup.txt ] || ! cmp -s result.txt result_backup.txt; then
          echo "HAS_CHANGES=true" >> $GITHUB_ENV
        else
          echo "HAS_CHANGES=false" >> $GITHUB_ENV
        fi
    
    - name: 配置Git
      if: env.QUALITY_CHECK == 'true' && env.HAS_CHANGES == 'true'
      run: |
        git config user.email "action@github.com"
        git config user.name "GitHub Action"
    
    - name: 提交更新
      if: env.QUALITY_CHECK == 'true' && env.HAS_CHANGES == 'true'
      run: |
        git add result.txt
        git commit -m "🔄 自动更新IPTV频道列表 - ${{ env.VALID_CHANNELS }}个频道，${{ env.GROUPS }}个分组"
        git push
    
    - name: 质量检查失败处理
      if: env.QUALITY_CHECK == 'false'
      run: |
        echo "质量检查未通过，跳过提交"
        exit 0

env:
  PYTHONIOENCODING: utf-8
  PYTHONUNBUFFERED: 1
